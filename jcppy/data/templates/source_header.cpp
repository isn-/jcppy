/**
 * @attention
 * Generated by jccpy {{jcppy_version}}~{{jcppy_revision}}.
 * Do not edit!
 */

#include <cstring>
#include <sstream>
#include <stdexcept>
#include <algorithm>
#include <iterator>
#include <inttypes.h>
#include <cstring>
#include <cstdio>
#include "{{header_filename}}"

/*********************************************************/
/*         Inline embedjson library goes below           */
/*********************************************************/

{{embedjson}}

/*********************************************************/
/*         End of inline embedjson library               */
/*********************************************************/

{{Name}}::{{Name}}()
{
}

{{Name}} {{Name}}::fromJson(const std::string& json)
{
  return fromJson(json.data(), json.size());
}

{{Name}} {{Name}}::fromJson(const char* json, std::size_t size)
{
  {{Name}}Reader reader;
  reader.read(json, size);
  return reader.instance();
}

{{Name}} {{Name}}::readJson(std::istream& stream)
{
  char buffer[1024];
  {{Name}}Reader reader;
  while (stream.good()) {
    stream.read(buffer, sizeof(buffer));
    std::size_t nread = stream ? sizeof(buffer) : stream.gcount();
    reader.read(buffer, nread);
  }
  return reader.instance();
}

std::string {{Name}}::toJson() const
{
  std::stringstream ss;
  writeJson(ss);
  return ss.str();
}

std::ostream& {{Name}}::writeJson(std::ostream& stream) const
{
  std::ostream_iterator<char> out(stream);
  {{Name}}Writer writer(this);
  writer.write(out, true);
  return stream;
}


